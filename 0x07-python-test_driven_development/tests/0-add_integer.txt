>>> add_integer = __import__('0-add_integer').add_integer

# Basic addition
>>> add_integer(1, 2)
3

# Negative numbers
>>> add_integer(100, -2)
98

# Default value for b
>>> add_integer(2)
100

# Float casting
>>> add_integer(100.3, -2)
98

# Float a, integer b
>>> add_integer(3.7, 2)
5

# Integer a, float b
>>> add_integer(3, 2.7)
5

# Zero
>>> add_integer(0, 0)
0

# Large numbers
>>> add_integer(999999999, 1)
1000000000

# Error: a is a string
>>> add_integer("a", 2)
Traceback (most recent call last):
TypeError: a must be an integer

# Error: b is a string
>>> add_integer(2, "b")
Traceback (most recent call last):
TypeError: b must be an integer

# Error: a is None
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

# Error: a is a list
>>> add_integer([1, 2], 3)
Traceback (most recent call last):
TypeError: a must be an integer

# Error: b is a dictionary
>>> add_integer(2, {"b": 1})
Traceback (most recent call last):
TypeError: b must be an integer
